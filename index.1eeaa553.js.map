{"mappings":"mEACA,oBAAoBA,QAAQC,KAAKC,iBAAiB,WAAW,IAAID,KAAKE,gBAAgBF,KAAKC,iBAAiB,YAAYE,GAAGA,EAAEC,UAAUJ,KAAKK,QAAQC,WAAWN,KAAKC,iBAAiB,WAAWM,IAAIA,EAAEC,MAAM,eAAeD,EAAEC,KAAKC,MAAMT,KAAKU,aAAaC,aAAaC,MAAM,IAAIZ,KAAKK,QAAQQ,aAAaD,MAAME,IAAIA,EAAEC,SAASZ,GAAGA,EAAEa,SAASb,EAAEc,aAAajB,KAAKC,iBAAiB,SAAS,SAASiB,GAAG,mBAAmBA,EAAEC,QAAQC,OAAO,gBAAgBF,EAAEC,QAAQE,MAAMH,EAAEI,YAAYC,MAAML,EAAEC,SAASP,MAAMT,IAAI,GAAG,IAAIA,EAAEqB,OAAO,OAAOrB,EAAE,MAAMsB,EAAE,IAAIC,QAAQvB,EAAEwB,SAAS,OAAOF,EAAEG,IAAI,+BAA+B,gBAAgBH,EAAEG,IAAI,6BAA6B,eAAe,IAAIC,SAAS1B,EAAE2B,KAAK,CAACN,OAAOrB,EAAEqB,OAAOO,WAAW5B,EAAE4B,WAAWJ,QAAQF,OAAOO,OAAO7B,GAAG8B,QAAQC,MAAM/B,UAAW,MAAK,MAAMA,EAAE,CAACgC,eAAe,KAAI,EAAGC,iBAAiB,KAAI,EAAGC,SAAS,IAAItC,OAAOuC,SAASC,SAASC,OAAM,KAAMzC,OAAO0C,KAAKC,EAAEC,UAAUxC,EAAEiC,oBAAoBM,EAAEE,eAAeF,EAAEE,cAAcC,YAAYH,EAAEE,cAAcC,WAAWC,YAAY,CAACrC,KAAK,gBAAe,IAAKV,OAAOgD,qBAAqB5C,EAAEgC,mBAAmBpC,OAAOiD,gBAAgBN,EAAEE,eAAeF,EAAEE,cAAcK,SAASlD,OAAOmD,SAASC,cAAcC,KAAKxC,MAAMyC,IAAIlD,EAAEqC,MAAMP,QAAQqB,IAAI,sCAAsCD,EAAEE,OAAOF,EAAEpD,iBAAiB,eAAe,MAAME,EAAEqC,OAAOP,QAAQqB,IAAI,mEAAmEnD,EAAEkC,cAAcgB,EAAEG,SAASd,EAAEE,cAAcC,cAAc1C,EAAEqC,OAAOP,QAAQqB,IAAI,2DAA2DnD,EAAEkC,eAAeZ,KAAKtB,EAAEqC,OAAOP,QAAQC,MAAM,+CAA+CT,OAAOtB,EAAEqC,OAAOP,QAAQqB,IAAI,4EAA72B","sources":["node_modules/coi-serviceworker/coi-serviceworker.min.js"],"sourcesContent":["/*! coi-serviceworker v0.1.6 - Guido Zuidhof, licensed under MIT */\n\"undefined\"==typeof window?(self.addEventListener(\"install\",(()=>self.skipWaiting())),self.addEventListener(\"activate\",(e=>e.waitUntil(self.clients.claim()))),self.addEventListener(\"message\",(e=>{e.data&&\"deregister\"===e.data.type&&self.registration.unregister().then((()=>self.clients.matchAll())).then((e=>{e.forEach((e=>e.navigate(e.url)))}))})),self.addEventListener(\"fetch\",(function(e){\"only-if-cached\"===e.request.cache&&\"same-origin\"!==e.request.mode||e.respondWith(fetch(e.request).then((e=>{if(0===e.status)return e;const r=new Headers(e.headers);return r.set(\"Cross-Origin-Embedder-Policy\",\"require-corp\"),r.set(\"Cross-Origin-Opener-Policy\",\"same-origin\"),new Response(e.body,{status:e.status,statusText:e.statusText,headers:r})})).catch((e=>console.error(e))))}))):(()=>{const e={shouldRegister:()=>!0,shouldDeregister:()=>!1,doReload:()=>window.location.reload(),quiet:!1,...window.coi},r=navigator;e.shouldDeregister()&&r.serviceWorker&&r.serviceWorker.controller&&r.serviceWorker.controller.postMessage({type:\"deregister\"}),!1===window.crossOriginIsolated&&e.shouldRegister()&&(window.isSecureContext?r.serviceWorker&&r.serviceWorker.register(window.document.currentScript.src).then((t=>{e.quiet,console.log(\"COOP/COEP Service Worker registered\",t.scope),t.addEventListener(\"updatefound\",(()=>{!e.quiet&&console.log(\"Reloading page to make use of updated COOP/COEP Service Worker.\"),e.doReload()})),t.active&&!r.serviceWorker.controller&&(!e.quiet&&console.log(\"Reloading page to make use of COOP/COEP Service Worker.\"),e.doReload())}),(r=>{!e.quiet&&console.error(\"COOP/COEP Service Worker failed to register:\",r)})):!e.quiet&&console.log(\"COOP/COEP Service Worker not registered, a secure context is required.\"))})();"],"names":["window","self","addEventListener","skipWaiting","e","waitUntil","clients","claim","e1","data","type","registration","unregister","then","matchAll","e2","forEach","navigate","url","e3","request","cache","mode","respondWith","fetch","status","r","Headers","headers","set","Response","body","statusText","catch","console","error","shouldRegister","shouldDeregister","doReload","location","reload","quiet","coi","r1","navigator","serviceWorker","controller","postMessage","crossOriginIsolated","isSecureContext","register","document","currentScript","src","t","log","scope","active"],"version":3,"file":"index.1eeaa553.js.map"}